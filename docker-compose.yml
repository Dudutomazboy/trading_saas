version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: trading_postgres
    environment:
      POSTGRES_DB: trading_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-rust/migrations:/docker-entrypoint-initdb.d
    networks:
      - trading_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: trading_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading_network

  # Rust Backend
  backend:
    build:
      context: ./backend-rust
      dockerfile: Dockerfile
    container_name: trading_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/trading_saas
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      STRIPE_WEBHOOK_SECRET: whsec_your_webhook_secret
      RUST_LOG: info
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./model:/app/model
    networks:
      - trading_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: trading_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000/ws
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - trading_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: trading_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - trading_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  trading_network:
    driver: bridge
