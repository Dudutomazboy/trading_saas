{"ast":null,"code":"var _jsxFileName = \"/Users/eduardotomaz/projects/bot/website/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { authAPI, handleApiError } from \"../services/api\";\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: \"LOGIN_START\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n  LOGOUT: \"LOGOUT\",\n  REGISTER_START: \"REGISTER_START\",\n  REGISTER_SUCCESS: \"REGISTER_SUCCESS\",\n  REGISTER_FAILURE: \"REGISTER_FAILURE\",\n  LOAD_USER_START: \"LOAD_USER_START\",\n  LOAD_USER_SUCCESS: \"LOAD_USER_SUCCESS\",\n  LOAD_USER_FAILURE: \"LOAD_USER_FAILURE\",\n  UPDATE_PROFILE_SUCCESS: \"UPDATE_PROFILE_SUCCESS\",\n  CLEAR_ERROR: \"CLEAR_ERROR\"\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n    case AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n    if (token && user) {\n      try {\n        const parsedUser = JSON.parse(user);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user: parsedUser,\n            token\n          }\n        });\n        // Verify token is still valid\n        loadUser();\n      } catch (error) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        dispatch({\n          type: AUTH_ACTIONS.LOGOUT\n        });\n      }\n    } else {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authAPI.login(credentials);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_START\n      });\n      const response = await authAPI.register(userData);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  };\n\n  // Load user profile\n  const loadUser = async () => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_START\n      });\n      const response = await authAPI.getProfile();\n      const user = response.data;\n\n      // Update localStorage\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: user\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async profileData => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      const user = response.data;\n\n      // Update localStorage\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n        payload: user\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async passwordData => {\n    try {\n      await authAPI.changePassword(passwordData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === role;\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    var _state$user2;\n    return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.is_superuser) === true;\n  };\n\n  // Check if user has active subscription\n  const hasActiveSubscription = () => {\n    var _state$user3, _state$user3$subscrip;\n    return ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : (_state$user3$subscrip = _state$user3.subscription) === null || _state$user3$subscrip === void 0 ? void 0 : _state$user3$subscrip.status) === \"active\";\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    loadUser,\n    updateProfile,\n    changePassword,\n    clearError,\n    hasRole,\n    isAdmin,\n    hasActiveSubscription\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","handleApiError","jsxDEV","_jsxDEV","initialState","user","token","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_PROFILE_SUCCESS","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","localStorage","getItem","parsedUser","JSON","parse","loadUser","removeItem","login","credentials","response","data","setItem","stringify","success","errorMessage","register","userData","logout","console","getProfile","updateProfile","profileData","changePassword","passwordData","clearError","hasRole","role","_state$user","isAdmin","_state$user2","is_superuser","hasActiveSubscription","_state$user3","_state$user3$subscrip","subscription","status","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/eduardotomaz/projects/bot/website/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { authAPI, handleApiError } from \"../services/api\";\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: \"LOGIN_START\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n  LOGOUT: \"LOGOUT\",\n  REGISTER_START: \"REGISTER_START\",\n  REGISTER_SUCCESS: \"REGISTER_SUCCESS\",\n  REGISTER_FAILURE: \"REGISTER_FAILURE\",\n  LOAD_USER_START: \"LOAD_USER_START\",\n  LOAD_USER_SUCCESS: \"LOAD_USER_SUCCESS\",\n  LOAD_USER_FAILURE: \"LOAD_USER_FAILURE\",\n  UPDATE_PROFILE_SUCCESS: \"UPDATE_PROFILE_SUCCESS\",\n  CLEAR_ERROR: \"CLEAR_ERROR\",\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n    case AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        isLoading: false,\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n\n    if (token && user) {\n      try {\n        const parsedUser = JSON.parse(user);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: { user: parsedUser, token },\n        });\n        // Verify token is still valid\n        loadUser();\n      } catch (error) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      }\n    } else {\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    }\n  }, []);\n\n  // Login function\n  const login = async (credentials) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n\n      const response = await authAPI.login(credentials);\n      const { user, token } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: { user, token },\n      });\n\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.REGISTER_START });\n\n      const response = await authAPI.register(userData);\n      const { user, token } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: { user, token },\n      });\n\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage,\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    }\n  };\n\n  // Load user profile\n  const loadUser = async () => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n\n      const response = await authAPI.getProfile();\n      const user = response.data;\n\n      // Update localStorage\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: user,\n      });\n\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: errorMessage,\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      const user = response.data;\n\n      // Update localStorage\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n        payload: user,\n      });\n\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Change password\n  const changePassword = async (passwordData) => {\n    try {\n      await authAPI.changePassword(passwordData);\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Check if user has specific role\n  const hasRole = (role) => {\n    return state.user?.role === role;\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return state.user?.is_superuser === true;\n  };\n\n  // Check if user has active subscription\n  const hasActiveSubscription = () => {\n    return state.user?.subscription?.status === \"active\";\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    loadUser,\n    updateProfile,\n    changePassword,\n    clearError,\n    hasRole,\n    isAdmin,\n    hasActiveSubscription,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}